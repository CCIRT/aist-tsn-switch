# ------------------------------------------------------------------------------
# Referenced: https://www.fpgadeveloper.com/driving-ethernet-ports-without-a-processor/index.html#modifying-the-design-for-the-ethernet-fmc
# ------------------------------------------------------------------------------
2c2
< // File       : tri_mode_ethernet_mac_0_fifo_block.v
---
> // File       : tri_mode_ethernet_mac_0_fifo_block_mod.v
71c71
< //        |  |                     |     |     SUPPORT LEVEL    |   |
---
> //        |  |                     |     |         CORE         |   |
89c89
< module tri_mode_ethernet_mac_0_fifo_block (
---
> module tri_mode_ethernet_mac_0_fifo_block_mod (
93,97c93,95
<       input         glbl_rstn,
<       input         rx_axi_rstn,
<       input         tx_axi_rstn,
< 
< 
---
>       // input         glbl_rstn,
>       // input         rx_axi_rstn,
>       // input         tx_axi_rstn,
100c98
<       input         refclk,
---
>       // input         refclk,
104,107c102,108
<       output        rx_mac_aclk,
<       output        rx_reset,
<       output [27:0] rx_statistics_vector,
<       output        rx_statistics_valid,
---
>       // output        rx_mac_aclk,
>       // output        rx_reset,
>       // output [27:0] rx_statistics_vector,
>       // output        rx_statistics_valid,
> 
>       input        rx_mac_aclk,
>       input        rx_reset,
118a120,126
> 
>       // rx mac AXI-Stream interface
>       input    [7:0]    rx_axis_mac_tdata,
>       input             rx_axis_mac_tvalid,
>       input             rx_axis_mac_tlast,
>       input             rx_axis_mac_tuser,
> 
121,126c129,135
<       output        tx_mac_aclk,
<       output        tx_reset,
<       input  [7:0]  tx_ifg_delay,
<       output [31:0] tx_statistics_vector,
<       output        tx_statistics_valid,
< 
---
>       // output        tx_mac_aclk,
>       // output        tx_reset,
>       // input  [7:0]  tx_ifg_delay,
>       // output [31:0] tx_statistics_vector,
>       // output        tx_statistics_valid,
>       input        tx_mac_aclk,
>       input        tx_reset,
138a148,154
>       // tx mac AXI-Stream interface
>       output   [7:0]    tx_axis_mac_tdata,
>       output            tx_axis_mac_tvalid,
>       output            tx_axis_mac_tlast,
>       input             tx_axis_mac_tready,
>       output            tx_axis_mac_tuser
> 
141,142c157,158
<       input         pause_req,
<       input  [15:0] pause_val,
---
>       // input         pause_req,
>       // input  [15:0] pause_val,
144,154c160,173
<       // GMII Interface
<       //-----------------
<       output [7:0]  gmii_txd,
<       output        gmii_tx_en,
<       output        gmii_tx_er,
<       output        gmii_tx_clk,
<       input  [7:0]  gmii_rxd,
<       input         gmii_rx_dv,
<       input         gmii_rx_er,
<       input         gmii_rx_clk,
<       input         mii_tx_clk,
---
>       // RGMII Interface
>       //------------------
>       // output [3:0]  rgmii_txd,
>       // output        rgmii_tx_ctl,
>       // output        rgmii_txc,
>       // input  [3:0]  rgmii_rxd,
>       // input         rgmii_rx_ctl,
>       // input         rgmii_rxc,
> 
>       // RGMII Inband Status Registers
>       //--------------------------------
>       // output        inband_link_status,
>       // output [1:0]  inband_clock_speed,
>       // output        inband_duplex_status,
157,160c176,179
<       // MDIO Interface
<       //---------------
<       inout         mdio,
<       output        mdc,
---
>       // // MDIO Interface
>       // //---------------
>       // inout         mdio,
>       // output        mdc,
162,186c181,205
<       // AXI-Lite Interface
<       //---------------
<       input         s_axi_aclk,
<       input         s_axi_resetn,
< 
<       input  [11:0] s_axi_awaddr,
<       input         s_axi_awvalid,
<       output        s_axi_awready,
< 
<       input  [31:0] s_axi_wdata,
<       input         s_axi_wvalid,
<       output        s_axi_wready,
< 
<       output [1:0]  s_axi_bresp,
<       output        s_axi_bvalid,
<       input         s_axi_bready,
< 
<       input  [11:0] s_axi_araddr,
<       input         s_axi_arvalid,
<       output        s_axi_arready,
< 
<       output [31:0] s_axi_rdata,
<       output [1:0]  s_axi_rresp,
<       output        s_axi_rvalid,
<       input         s_axi_rready
---
>       // // AXI-Lite Interface
>       // //---------------
>       // input         s_axi_aclk,
>       // input         s_axi_resetn,
>       //
>       // input  [11:0] s_axi_awaddr,
>       // input         s_axi_awvalid,
>       // output        s_axi_awready,
>       //
>       // input  [31:0] s_axi_wdata,
>       // input         s_axi_wvalid,
>       // output        s_axi_wready,
>       //
>       // output [1:0]  s_axi_bresp,
>       // output        s_axi_bvalid,
>       // input         s_axi_bready,
>       //
>       // input  [11:0] s_axi_araddr,
>       // input         s_axi_arvalid,
>       // output        s_axi_arready,
>       //
>       // output [31:0] s_axi_rdata,
>       // output [1:0]  s_axi_rresp,
>       // output        s_axi_rvalid,
>       // input         s_axi_rready
201,204c220,223
<   wire [7:0] rx_axis_mac_tdata;
<   wire       rx_axis_mac_tvalid;
<   wire       rx_axis_mac_tlast;
<   wire       rx_axis_mac_tuser;
---
>   // wire [7:0] rx_axis_mac_tdata;
>   // wire       rx_axis_mac_tvalid;
>   // wire       rx_axis_mac_tlast;
>   // wire       rx_axis_mac_tuser;
207,211c226,230
<   wire [7:0] tx_axis_mac_tdata;
<   wire       tx_axis_mac_tvalid;
<   wire       tx_axis_mac_tready;
<   wire       tx_axis_mac_tlast;
<   wire       tx_axis_mac_tuser;
---
>   // wire [7:0] tx_axis_mac_tdata;
>   // wire       tx_axis_mac_tvalid;
>   // wire       tx_axis_mac_tready;
>   // wire       tx_axis_mac_tlast;
>   // wire       tx_axis_mac_tuser;
217,220c236,239
<   assign rx_mac_aclk          = rx_mac_aclk_int;
<   assign tx_mac_aclk          = tx_mac_aclk_int;
<   assign rx_reset             = rx_reset_int;
<   assign tx_reset             = tx_reset_int;
---
>   // assign rx_mac_aclk          = rx_mac_aclk_int;
>   // assign tx_mac_aclk          = tx_mac_aclk_int;
>   // assign rx_reset             = rx_reset_int;
>   // assign tx_reset             = tx_reset_int;
223c242
<   // Instantiate the Tri-Mode Ethernet MAC Support Level wrapper
---
>   // Instantiate the Tri-Mode Ethernet MAC core
225,313c244,332
<   tri_mode_ethernet_mac_0_support trimac_sup_block (
<       .gtx_clk              (gtx_clk),
<       
< 
<       // asynchronous reset
<       .glbl_rstn            (glbl_rstn),
<       .rx_axi_rstn          (rx_axi_rstn),
<       .tx_axi_rstn          (tx_axi_rstn),
< 
< 
< 
<       // Receiver Interface
<       .rx_enable            (),
< 
<       .rx_statistics_vector (rx_statistics_vector),
<       .rx_statistics_valid  (rx_statistics_valid),
< 
<       .rx_mac_aclk          (rx_mac_aclk_int),
<       .rx_reset             (rx_reset_int),
<       .rx_axis_mac_tdata    (rx_axis_mac_tdata),
<       .rx_axis_mac_tvalid   (rx_axis_mac_tvalid),
<       .rx_axis_mac_tlast    (rx_axis_mac_tlast),
<       .rx_axis_mac_tuser    (rx_axis_mac_tuser),
<       .rx_axis_filter_tuser (),
< 
<       // Transmitter Interface
<       .tx_enable             (),
< 
<       .tx_ifg_delay         (tx_ifg_delay),
<       .tx_statistics_vector (tx_statistics_vector),
<       .tx_statistics_valid  (tx_statistics_valid),
< 
<       .tx_mac_aclk          (tx_mac_aclk_int),
<       .tx_reset             (tx_reset_int),
<       .tx_axis_mac_tdata    (tx_axis_mac_tdata ),
<       .tx_axis_mac_tvalid   (tx_axis_mac_tvalid),
<       .tx_axis_mac_tlast    (tx_axis_mac_tlast),
<       .tx_axis_mac_tuser    (tx_axis_mac_tuser ),
<       .tx_axis_mac_tready   (tx_axis_mac_tready),
< 
<       // Flow Control
<       .pause_req            (pause_req),
<       .pause_val            (pause_val),
< 
<       // Reference clock for IDELAYCTRL's
<       .refclk               (refclk),
< 
<       // Speed Control
<       .speedis100           (),
<       .speedis10100         (),
< 
<       // GMII Interface
<       .gmii_txd             (gmii_txd),
<       .gmii_tx_en           (gmii_tx_en),
<       .gmii_tx_er           (gmii_tx_er),
<       .gmii_tx_clk          (gmii_tx_clk),
<       .gmii_rxd             (gmii_rxd),
<       .gmii_rx_dv           (gmii_rx_dv),
<       .gmii_rx_er           (gmii_rx_er),
<       .gmii_rx_clk          (gmii_rx_clk),
<       .mii_tx_clk           (mii_tx_clk),
< 
<       
<       // MDIO Interface
<       //---------------
<       .mdio                 (mdio),
<       .mdc                  (mdc),
< 
<       // AXI lite interface
<       .s_axi_aclk           (s_axi_aclk),
<       .s_axi_resetn         (s_axi_resetn),
<       .s_axi_awaddr         (s_axi_awaddr),
<       .s_axi_awvalid        (s_axi_awvalid),
<       .s_axi_awready        (s_axi_awready),
<       .s_axi_wdata          (s_axi_wdata),
<       .s_axi_wvalid         (s_axi_wvalid),
<       .s_axi_wready         (s_axi_wready),
<       .s_axi_bresp          (s_axi_bresp),
<       .s_axi_bvalid         (s_axi_bvalid),
<       .s_axi_bready         (s_axi_bready),
<       .s_axi_araddr         (s_axi_araddr),
<       .s_axi_arvalid        (s_axi_arvalid),
<       .s_axi_arready        (s_axi_arready),
<       .s_axi_rdata          (s_axi_rdata),
<       .s_axi_rresp          (s_axi_rresp),
<       .s_axi_rvalid         (s_axi_rvalid),
<       .s_axi_rready         (s_axi_rready),
<       .mac_irq              ()
<    );
---
>    // tri_mode_ethernet_mac_0 tri_mode_ethernet_mac_i (
>    //    .gtx_clk              (gtx_clk),
>    //
>    //
>    //    .gtx_clk_out          (),
>    //    .gtx_clk90_out        (),
>    //    // asynchronous reset
>    //    .glbl_rstn            (glbl_rstn),
>    //    .rx_axi_rstn          (rx_axi_rstn),
>    //    .tx_axi_rstn          (tx_axi_rstn),
>    //
>    //    // Receiver Interface
>    //    .rx_enable            (),
>    //
>    //    .rx_statistics_vector (rx_statistics_vector),
>    //    .rx_statistics_valid  (rx_statistics_valid),
>    //
>    //    .rx_mac_aclk          (rx_mac_aclk_int),
>    //    .rx_reset             (rx_reset_int),
>    //    .rx_axis_mac_tdata    (rx_axis_mac_tdata),
>    //    .rx_axis_mac_tvalid   (rx_axis_mac_tvalid),
>    //    .rx_axis_mac_tlast    (rx_axis_mac_tlast),
>    //    .rx_axis_mac_tuser    (rx_axis_mac_tuser),
>    //    .rx_axis_filter_tuser (),
>    //
>    //    // Transmitter Interface
>    //    .tx_enable             (),
>    //
>    //    .tx_ifg_delay         (tx_ifg_delay),
>    //    .tx_statistics_vector (tx_statistics_vector),
>    //    .tx_statistics_valid  (tx_statistics_valid),
>    //
>    //    .tx_mac_aclk          (tx_mac_aclk_int),
>    //    .tx_reset             (tx_reset_int),
>    //    .tx_axis_mac_tdata    (tx_axis_mac_tdata ),
>    //    .tx_axis_mac_tvalid   (tx_axis_mac_tvalid),
>    //    .tx_axis_mac_tlast    (tx_axis_mac_tlast),
>    //    .tx_axis_mac_tuser    (tx_axis_mac_tuser ),
>    //    .tx_axis_mac_tready   (tx_axis_mac_tready),
>    //
>    //    // Flow Control
>    //    .pause_req            (pause_req),
>    //    .pause_val            (pause_val),
>    //
>    //    // Reference clock for IDELAYCTRL's
>    //    .refclk               (refclk),
>    //
>    //    // Speed Control
>    //    .speedis100           (),
>    //    .speedis10100         (),
>    //
>    //    // RGMII Interface
>    //    .rgmii_txd            (rgmii_txd),
>    //    .rgmii_tx_ctl         (rgmii_tx_ctl),
>    //    .rgmii_txc            (rgmii_txc),
>    //    .rgmii_rxd            (rgmii_rxd),
>    //    .rgmii_rx_ctl         (rgmii_rx_ctl),
>    //    .rgmii_rxc            (rgmii_rxc),
>    //    .inband_link_status   (inband_link_status),
>    //    .inband_clock_speed   (inband_clock_speed),
>    //    .inband_duplex_status (inband_duplex_status),
>    //
>    //
>    //    // MDIO Interface
>    //    //---------------
>    //    .mdio                 (mdio),
>    //    .mdc                  (mdc),
>    //
>    //    // AXI lite interface
>    //    .s_axi_aclk           (s_axi_aclk),
>    //    .s_axi_resetn         (s_axi_resetn),
>    //    .s_axi_awaddr         (s_axi_awaddr),
>    //    .s_axi_awvalid        (s_axi_awvalid),
>    //    .s_axi_awready        (s_axi_awready),
>    //    .s_axi_wdata          (s_axi_wdata),
>    //    .s_axi_wvalid         (s_axi_wvalid),
>    //    .s_axi_wready         (s_axi_wready),
>    //    .s_axi_bresp          (s_axi_bresp),
>    //    .s_axi_bvalid         (s_axi_bvalid),
>    //    .s_axi_bready         (s_axi_bready),
>    //    .s_axi_araddr         (s_axi_araddr),
>    //    .s_axi_arvalid        (s_axi_arvalid),
>    //    .s_axi_arready        (s_axi_arready),
>    //    .s_axi_rdata          (s_axi_rdata),
>    //    .s_axi_rresp          (s_axi_rresp),
>    //    .s_axi_rvalid         (s_axi_rvalid),
>    //    .s_axi_rready         (s_axi_rready),
>    //    .mac_irq              ()
>    // );
323c342
<       .clk                  (rx_mac_aclk_int),
---
>       .clk                  (rx_mac_aclk),
325c344,345
<       .reset_in             (rx_reset_int),
---
>       .reset_in             (rx_reset),
>       // .reset_in             (rx_reset_int),
330c350
<       .clk                  (tx_mac_aclk_int),
---
>       .clk                  (tx_mac_aclk),
332c352,353
<       .reset_in             (tx_reset_int),
---
>       .reset_in             (tx_reset),
>       // .reset_in             (tx_reset_int),
358c379
<       .tx_mac_aclk            (tx_mac_aclk_int),
---
>       .tx_mac_aclk            (tx_mac_aclk),
377c398
<       .rx_mac_aclk            (rx_mac_aclk_int),
---
>       .rx_mac_aclk            (rx_mac_aclk),
390d410
< 
