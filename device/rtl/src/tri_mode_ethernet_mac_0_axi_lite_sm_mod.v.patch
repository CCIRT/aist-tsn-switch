# ------------------------------------------------------------------------------
# Referenced: https://www.fpgadeveloper.com/driving-ethernet-ports-without-a-processor/index.html#modifying-the-design-for-the-ethernet-fmc
# ------------------------------------------------------------------------------
2c2
< // File       : tri_mode_ethernet_mac_0_axi_lite_sm.v
---
> // File       : tri_mode_ethernet_mac_0_axi_lite_sm_mod.v
64c64
< module tri_mode_ethernet_mac_0_axi_lite_sm (
---
> module tri_mode_ethernet_mac_0_axi_lite_sm_mod (
107,114c107,122
<            MDIO_RESTART          = 12,
<            MDIO_LOOPBACK         = 13,
<            MDIO_STATS            = 14,
<            MDIO_STATS_POLL_CHECK = 15,
<            RESET_MAC_TX          = 16,
<            RESET_MAC_RX          = 17,
<            CNFG_MDIO             = 18,
<            CNFG_FLOW             = 19,
---
>            MDIO_RGMII_RD         = 6,
>            MDIO_RGMII_RD_POLL    = 7,
>            MDIO_RGMII            = 8,
>            MDIO_PAGE_SET         = 9,
>            MDIO_DELAY_RD         = 10,
>            MDIO_DELAY_RD_POLL    = 11,
>            MDIO_DELAY            = 12,
>            MDIO_PAGE_RST         = 13,
>            MDIO_RESTART          = 14,
>            MDIO_LOOPBACK         = 15,
>            MDIO_STATS            = 16,
>            MDIO_STATS_POLL_CHECK = 17,
>            RESET_MAC_TX          = 18,
>            RESET_MAC_RX          = 19,
>            CNFG_MDIO             = 20,
>            CNFG_FLOW             = 21,
193c201
< localparam PHY_ADDR               = 8'h7;
---
> localparam PHY_ADDR               = 8'h0;
197a206,209
> localparam PHY_PAGE_ADDR_REG      = 8'h16;
> // Non IEEE registers assume the PHY as provided on the Xilinx standard connectivity board i.e SP605
> localparam PHY_MODE_CTL_REG       = 8'h15;
> localparam PHY_MODE_STS_REG       = 8'h1b;
354a367,427
>             axi_state      <= MDIO_RGMII_RD;
>          end
>          MDIO_RGMII_RD : begin
>             $display("** Note: Checking current config");
>             start_mdio     <= 1;
>             writenread     <= 0;
>             mdio_reg_addr  <= PHY_MODE_STS_REG;
>             mdio_op        <= MDIO_OP_RD;
>             axi_state      <= MDIO_RGMII_RD_POLL;
>          end
>          MDIO_RGMII_RD_POLL : begin
>             axi_state      <= MDIO_RGMII;
>             // prepare write_data for the next state
>             axi_wr_data    <= {16'h0000, axi_rd_data[15:4], 4'hb};
>          end
>          MDIO_RGMII : begin
>             // set PHY to RGMII (if no jumper)
>             $display("** Note: Setting PHY for RGMII - assumes Xilinx Standard Connectivity Board PHY");
>             start_mdio     <= 1;
>             mdio_reg_addr  <= PHY_MODE_STS_REG;
>             mdio_op        <= MDIO_OP_WR;
>             axi_state      <= MDIO_PAGE_SET;
>          end
>          MDIO_PAGE_SET : begin
>             // set page to 2
>             $display("** Note: Setting page to 2");
>             start_mdio     <= 1;
>             mdio_reg_addr  <= PHY_PAGE_ADDR_REG;
>             mdio_op        <= MDIO_OP_WR;
>             axi_wr_data    <= 32'h2;
>             axi_state      <= MDIO_DELAY_RD;
>          end
>          // may not need the following three states
>          MDIO_DELAY_RD : begin
>             $display("** Note: Checking current config");
>             start_mdio     <= 1;
>             writenread     <= 0;
>             mdio_reg_addr  <= PHY_MODE_CTL_REG;
>             mdio_op        <= MDIO_OP_RD;
>             axi_state      <= MDIO_DELAY_RD_POLL;
>          end
>          MDIO_DELAY_RD_POLL : begin
>             axi_state      <= MDIO_DELAY;
>             // prepare write_data for the next state
>             axi_wr_data    <= {16'h0000, axi_rd_data[15:6], 2'b10, axi_rd_data[3:0]}; // force bit 5 to 1 and 4 to 0
>          end
>          MDIO_DELAY : begin
>             // add/remove the clock delay
>             $display("** Note: Setting PHY RGMII delay - assumes Xilinx Standard Connectivity Board PHY");
>             start_mdio     <= 1;
>             mdio_reg_addr  <= PHY_MODE_CTL_REG;
>             mdio_op        <= MDIO_OP_WR;
>             axi_state      <= MDIO_PAGE_RST;
>          end
>          MDIO_PAGE_RST : begin
>             // set page back to 0
>             $display("** Note: Setting page back to 0");
>             start_mdio     <= 1;
>             mdio_reg_addr  <= PHY_PAGE_ADDR_REG;
>             mdio_op        <= MDIO_OP_WR;
>             axi_wr_data    <= 32'h0;
412c485
<             axi_wr_data    <= 32'h90000000;
---
>             axi_wr_data    <= 32'hB8000000;  // disable FCS removal, support VLAN
422c495
<             axi_wr_data    <= 32'h90000000;
---
>             axi_wr_data    <= 32'hB8000000;  // receive frames with FCS, support VLAN
446c519
<             axi_wr_data    <= 32'h0;
---
>             axi_wr_data    <= 32'h60000000;  // Enable legacy Flow Control(TX/RX)
807d879
< 
