 result.c | 34 +++++++++++++++++-----------------
 stat.c   | 35 ++++++++++++++++++++++++++++++++---
 stat.h   |  2 +-
 3 files changed, 50 insertions(+), 21 deletions(-)

diff --git a/result.c b/result.c
index df47064..6aeca65 100644
--- a/result.c
+++ b/result.c
@@ -108,18 +108,18 @@ static int res_tx_lat_print(void)
 		stats_diff(&tx_hw_v, &tx_sw_v, &temp);
 		n |= stats_print("\ndma + NIC tx latency, us (not complete "
 				 "driver latency, driver s/w ts -> wire)" ,
-				 &temp, print_flags, NULL);
+				 &temp, print_flags, NULL, 0);
 
 		stats_diff(&tx_sw_v, &tx_app_v, &temp);
 		n |= stats_print("\nstack + packet scheduler + part of "
 				 "driver tx latency, us (app -> some place in the "
 				 "NIC driver, app -> driver s/w ts)",
-				  &temp, print_flags, NULL);
+				  &temp, print_flags, NULL, 0);
 
 		stats_diff(&tx_hw_v, &tx_app_v, &temp);
 		n |= stats_print("\ncomplete tx latency, us (driver latency + "
 				 "stack latency, app -> wire)",
-				  &temp, print_flags, NULL);
+				  &temp, print_flags, NULL, 0);
 	}
 
 	if (plget->flags & PLF_SCHED_STAT) {
@@ -130,7 +130,7 @@ static int res_tx_lat_print(void)
 		stats_diff(v, &tx_app_v, &temp);
 		n |= stats_print("\nstack tx latency, us (based on s/w "
 				 "timestamps, app -> packet scheduler)",
-				  &temp, print_flags, NULL);
+				  &temp, print_flags, NULL, 0);
 
 		for (i = 1; i < plget->dev_deep; i++) {
 			printf("psched%d -> psched%d\n", i, i + 1);
@@ -138,19 +138,19 @@ static int res_tx_lat_print(void)
 			n |= stats_print("\nbetween device (sched) tx latency, "
 					 "us (based on s/w timestamps, psched "
 					 "-> psched)",
-					 &temp, print_flags, NULL);
+					 &temp, print_flags, NULL, 0);
 			v = &tx_sch_v[i];
 		}
 
 		stats_diff(&tx_sw_v, v, &temp);
 		n |= stats_print("\npacket scheduler + part of driver tx "
 				 "latency, us (packet scheduler -> driver s/w "
-				 "ts)", &temp, print_flags, NULL);
+				 "ts)", &temp, print_flags, NULL, 0);
 
 		stats_diff(&tx_hw_v, v, &temp);
 		n |= stats_print("\ndriver + packet scheduler tx latency, "
 				 "us (packet scheduler entrance -> wire)",
-				  &temp, print_flags, NULL);
+				  &temp, print_flags, NULL, 0);
 	}
 
 	if (plget->flags & PLF_HW_STAT) {
@@ -162,16 +162,16 @@ static int res_tx_lat_print(void)
 		}
 
 		n |= stats_print("\nhw tx time, us", &tx_hw_v, print_flags,
-				 rtime);
+				 rtime, 1);
 	}
 
 	if (plget->flags & PLF_IPGAP_STAT) {
 		if (plget->flags & PLF_DIS_HW_TS)
 			n |= stats_print("\ngap of sw tx time, us", &tx_sw_v,
-					  print_flags | STATS_GAP_DATA, NULL);
+					  print_flags | STATS_GAP_DATA, NULL, 0);
 		else
 			n |= stats_print("\ngap of hw tx time, us", &tx_hw_v,
-					  print_flags | STATS_GAP_DATA, NULL);
+					  print_flags | STATS_GAP_DATA, NULL, 0);
 	}
 
 	return n;
@@ -193,16 +193,16 @@ static int res_rx_lat_print(void)
 							rx_hw_v.start_ts;
 
 		n |= stats_print("\nhw rx time, us", &rx_hw_v, print_flags,
-				 rtime);
+				 rtime, 2);
 	}
 
 	if (plget->flags & PLF_IPGAP_STAT) {
 		if (plget->flags & PLF_DIS_HW_TS)
 			n |= stats_print("\ngap of sw rx time, us", &rx_sw_v,
-					 print_flags | STATS_GAP_DATA, NULL);
+					 print_flags | STATS_GAP_DATA, NULL, 0);
 		else
 			n |= stats_print("\ngap of hw rx time, us", &rx_hw_v,
-					 print_flags | STATS_GAP_DATA, NULL);
+					 print_flags | STATS_GAP_DATA, NULL, 0);
 
 
 	}
@@ -211,15 +211,15 @@ static int res_rx_lat_print(void)
 		stats_diff(&rx_sw_v, &rx_hw_v, &temp);
 		n |= stats_print("\ndriver rx latency, us (no stack latency, "
 				 "wire -> net subsystem)",
-				 &temp, print_flags, NULL);
+				 &temp, print_flags, NULL, 0);
 		stats_diff(&rx_app_v, &rx_sw_v, &temp);
 		n |= stats_print("\nstack rx latency, us (no driver latency,  "
 				 "net subsystem -> app)",
-				 &temp, print_flags, NULL);
+				 &temp, print_flags, NULL, 0);
 		stats_diff(&rx_app_v, &rx_hw_v, &temp);
 		n |= stats_print("\ncomplete rx latency, us (driver latency + "
 				 "stack latency, wire -> app)",
-				 &temp, print_flags, NULL);
+				 &temp, print_flags, NULL, 0);
 	}
 
 	return n;
@@ -260,7 +260,7 @@ static void res_rtt_print(void)
 
 	stats_diff(b_stat, a_stat, &temp);
 	stats_print("\nRTT (no rx/tx latencies of this HOST, us",
-		    &temp, print_flags, NULL);
+		    &temp, print_flags, NULL, 0);
 }
 
 static struct stats *res_best_rx_vect(void)
diff --git a/stat.c b/stat.c
index 96ceb2c..4c8379e 100644
--- a/stat.c
+++ b/stat.c
@@ -171,7 +171,7 @@ void stats_diff(struct stats *a, struct stats *b, struct stats *res)
 	}
 }
 
-static void stats_print_log(struct stats *ss, int flags, struct timespec *rtime)
+static void stats_print_log(struct stats *ss, int flags, struct timespec *rtime, int mode)
 {
 	double min_val = 1000000, max_val = 0;
 	struct timespec *ts, temp;
@@ -186,6 +186,35 @@ static void stats_print_log(struct stats *ss, int flags, struct timespec *rtime)
 		printf("relative abs time %llu ns\n", start);
 		start = to_val(ss->start_ts);
 		printf("first packet abs time %llu ns\n", start);
+
+		if (mode == 1) {
+			static FILE *data_file = NULL;
+			data_file = fopen("hwstamp_tx.log", "w");
+			int i = 1;
+			for (ts = ss->start_ts; ts < ss->next_ts; ts++) {
+				start = to_val(ts);
+				// printf("%3d th packet abs time %llu ns\n", i++, start);
+				if (data_file)
+				{
+					fprintf(data_file, "%llu\n", start);
+					i++;
+				}
+			}
+		}
+		else if (mode == 2) {
+			static FILE *data_file = NULL;
+			data_file = fopen("hwstamp_rx.log", "w");
+			int i = 1;
+			for (ts = ss->start_ts; ts < ss->next_ts; ts++) {
+				start = to_val(ts);
+				// printf("%3d th packet abs time %llu ns\n", i++, start);
+				if (data_file)
+				{
+					fprintf(data_file, "%llu\n", start);
+					i++;
+				}
+			}
+		}
 	}
 
 	memset(line, '-', LOG_LINE_SIZE - 1);
@@ -305,7 +334,7 @@ void stats_vrate_print(struct stats *ss, int frame_size)
 	stats_rate_print(&interval, pkt_num, frame_size);
 }
 
-int stats_print(char *str, struct stats *ss, int flags, struct timespec *rtime)
+int stats_print(char *str, struct stats *ss, int flags, struct timespec *rtime, int mode)
 {
 	double mean, dev;
 	__u64 n;
@@ -320,7 +349,7 @@ int stats_print(char *str, struct stats *ss, int flags, struct timespec *rtime)
 	if (rtime)
 		flags |= STATS_LIN_DATA;
 
-	stats_print_log(ss, flags, rtime);
+	stats_print_log(ss, flags, rtime, mode);
 
 	if (flags & STATS_LIN_DATA)
 		goto out;
diff --git a/stat.h b/stat.h
index 11c6f54..532f37a 100644
--- a/stat.h
+++ b/stat.h
@@ -31,7 +31,7 @@ struct stats {
 void ts_sub(struct timespec *a, struct timespec *b, struct timespec *res);
 void stats_push(struct stats *ss, struct timespec *ts);
 void stats_push_id(struct stats *ss, struct timespec *ts, __u32 id);
-int stats_print(char *str, struct stats *ss, int flags, struct timespec *rtime);
+int stats_print(char *str, struct stats *ss, int flags, struct timespec *rtime, int mode);
 int stats_reserve(struct stats *ss, int entry_num);
 void stats_diff(struct stats *a, struct stats *b, struct stats *res);
 int stats_correct_id(struct stats *ss, __u32 id);
